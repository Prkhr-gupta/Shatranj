<% layout("/layouts/boilerplate") %>

<div class="h-screen flex">
  <div class="w-8/12 m-3">
    <div
      class="h-1/4 bg-neutral-900 m-3 rounded-2xl flex flex-col justify-evenly items-center"
    >
      <div class="w-full">
        <label for="addFriend" class="text-white m-4 text-2xl"
          >Add Friend :-
        </label>
        <input
          id="addFriend"
          class="h-8 w-7/12 p-3 focus:outline-none bg-neutral-700 text-white rounded-md"
          aria-label="Search"
          placeholder="Search by username"
          value=""
        />
        <button
          id="searchUser"
          class="text-white m-4 bg-neutral-700 px-3 py-1 rounded-md hover:bg-neutral-600 active:bg-neutral-500"
        >
          <i class="fa-solid fa-magnifying-glass"></i>
        </button>
      </div>
      <div class="h-8 w-8/12 mb-3 hidden" id="loading">Loading...</div>
    </div>
    <div class="h-2/3 bg-neutral-900 m-3 rounded-2xl pt-8">
      <div class="text-white">
        <div class="text-5xl mb-4 text-center">
          Your Friends
          <div class="inline btn-group dropup float-right mr-16 mt-3">
            <button
              class="h-full flex items-center relative"
              id="dropdownMenuClickableInside"
              data-bs-toggle="dropdown"
              data-bs-auto-close="outside"
            >
              <i class="fa-solid fa-user-plus text-2xl"></i>
              <span
                class="text-sm position-absolute top-0 start-100 translate-middle badge rounded-full bg-danger hidden"
                id="badgeReq"
              >
                0
              </span>
            </button>
            <ul
              class="dropdown-menu dropdown-menu-dark dropdown-menu-end"
              id="friendRequests"
              aria-labelledby="dropdownMenuButton1"
            >
              <li class="dropdown-item">No Friend Requests</li>
            </ul>
          </div>
        </div>
      </div>

      <div
        class="flex flex-col items-center overflow-y-auto h-4/6"
        id="allFriends"
      >
        <% for(let friend of currUser.friends) { %>
        <div
          class="w-11/12 text-white mx-4 my-2 border-2 border-neutral-800 rounded-md flex justify-between"
          id="<%= friend.username %>friend"
        >
          <div class="h-full w-full rounded-l-md p-3 hover:bg-neutral-800">
            <button class="h-full w-full rounded-l-md text-left pl-4">
              <i class="fa-regular fa-user mr-2"></i><%= friend.username %> (<%=
              friend.rating %>)
            </button>
          </div>
          <div class="flex">
            <button
              type="button"
              class="relative text-black bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 h-full w-32 msgBtn"
              id="<%= friend.username %>"
            >
              <i class="fa-regular fa-message mr-2"></i>
              Message
              <span
                id="<%= friend.username %>badge"
                class="position-absolute top-0 start-100 translate-middle badge rounded-full bg-danger"
                >0</span
              >
            </button>
            <button
              class="w-12 bg-rose-800 rounded-r-md removeFriend"
              id="<%= friend.username %>"
            >
              <i class="fa-solid fa-trash"></i>
            </button>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>
  <div class="w-4/12 bg-neutral-900 m-3 rounded-t-2xl">
    <div class="h-1/2">
      <div class="h-2/3 flex mt-3">
        <div class="w-full h-full">
          <div class="text-white text-center text-2xl h-12 pt-1">Gamemode</div>
          <div id="modes" class="text-center bg-neutral-900 h-2/3 w-full">
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="bullet"
            >
              <i class="fa-regular fa-hourglass mr-2"></i>Bullet 1|1
            </button>
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="blitz"
            >
              <i class="fa-solid fa-bolt mr-2"></i>Blitz 3|2
            </button>
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="rapid"
            >
              <i class="fa-solid fa-clock mr-2"></i>Rapid 10|0
            </button>
          </div>
        </div>
        <div class="w-full h-full">
          <div class="text-white text-center text-2xl h-12 pt-1">Play as</div>
          <div id="color" class="text-center bg-neutral-900 h-2/3 w-full">
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="white"
            >
              <i class="fa-regular fa-chess-queen mr-2"></i>White
            </button>
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="black"
            >
              <i class="fa-solid fa-chess-queen mr-2"></i>Black
            </button>
            <button
              class="bg-neutral-200 hover:bg-neutral-400 my-1 rounded-2xl w-3/4 h-8"
              id="random"
            >
              <i class="fa-solid fa-shuffle mr-2"></i>Random
            </button>
          </div>
        </div>
      </div>
      <div class="h-1/4 text-center">
        <button
          class="h-full w-10/12 text-white rounded-2xl bg-lime-700 hover:bg-lime-600 active:bg-lime-500 text-2xl font-bold"
        >
          <i class="fa-brands fa-delicious mr-2"></i>Challenge
        </button>
      </div>
    </div>
    <div class="h-1/2 border-t flex flex-col">
      <div id="currChat" class="text-white text-center"></div>
      <div class="h-full overflow-y-scroll flex flex-col" id="msgBox"></div>
      <div class="h-10 w-full border-t bg-neutral-900 mb-3 flex">
        <div class="grow">
          <input
            type="text"
            class="h-full w-full focus:outline-none px-2 bg-neutral-900 text-white"
            placeholder="Enter message"
            id="text"
          />
        </div>
        <div class="m-2">
          <button class="mx-1" id="sendMsg">
            <img
              class="h-6 active:scale-50"
              src="img/sendMsg.png"
              alt="sendMsg"
            />
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  let serachUser = document.getElementById("searchUser");
  let addFriend = document.getElementById("addFriend");
  let userFound = document.getElementById("userFound");
  let userNotFound = document.getElementById("userNotFound");
  let loading = document.getElementById("loading");
  let msgBtns = document.querySelectorAll(".msgBtn");
  let msgBox = document.getElementById("msgBox");
  let send = document.getElementById("sendMsg");
  let text = document.getElementById("text");
  let currChat = document.getElementById("currChat");
  let friendRequests = document.getElementById("friendRequests");
  let badgeReq = document.getElementById("badgeReq");
  let allFriends = document.getElementById("allFriends");
  let friends = [];
  let removeFriendBtns = document.querySelectorAll(".removeFriend");
  let notifySound = new Audio("./assets/sounds/notify.mp3");

  function search() {
    xhr.open("GET", `user/find/${addFriend.value}`, true);
    xhr.onprogress = () => {
      loading.style.display = "flex";
    };
    xhr.onload = () => {
      loading.style.display = "none";
      let data = xhr.responseText;
      addFriend.value = "";
      if (!data) {
        Swal.fire({
          title: "User Not Found!",
          icon: "error",
          color: "#fff",
          background: "rgb(28, 28, 34)",
        });
      } else {
        let user = JSON.parse(data);
        let flag = false;
        console.log(friends);
        for (let friend of friends) {
          if (user.username == friend) {
            flag = true;
          }
        }
        if (user.username == "<%= currUser.username %>") {
          Swal.fire({
            text: "Cannot add yourself as friend!",
            icon: "error",
            color: "#fff",
            background: "rgb(28, 28, 34)",
          });
        } else if (flag) {
          Swal.fire({
            text: `${user.username} is your friend already`,
            icon: "info",
            color: "#fff",
            background: "rgb(28, 28, 34)",
          });
        } else {
          Swal.fire({
            title: user.username,
            text: `Current Rating : ${user.rating}`,
            showDenyButton: true,
            confirmButtonText: "Send Friend Request",
            denyButtonText: "Cancel",
            icon: "info",
            color: "#fff",
            background: "rgb(28, 28, 34)",
          }).then((result) => {
            if (result.isConfirmed) {
              // add toast

              socket.emit(
                "friend request",
                "<%= currUser.username %>",
                user.username
              );
            }
          });
        }
      }
    };
    xhr.send();
  }

  serachUser.addEventListener("click", () => {
    if (addFriend.value != "") {
      search();
    }
  });

  addFriend.addEventListener("keydown", (event) => {
    if (event.key === "Enter" && addFriend.value != "") {
      search();
    }
  });

  function createReq(from) {
    let li = document.createElement("li");
    let span = document.createElement("span");
    let btn1 = document.createElement("button");
    let btn2 = document.createElement("button");
    span.innerText = `${from} sent you a friend request`;
    btn1.innerText = "Accept";
    btn2.innerText = "Decline";
    btn1.style.backgroundColor = "rgb(229 229 229)";
    btn2.style.backgroundColor = "rgb(165, 43, 43)";
    btn1.style.color = "black";
    btn2.style.color = "white";
    btn1.style.padding = "0.5rem";
    btn2.style.padding = "0.5rem";
    btn1.style.margin = "0.5rem";
    btn2.style.margin = "0.5rem";
    btn1.id = `${from}`;
    btn1.addEventListener("click", () => {
      badgeReq.innerText = parseInt(badgeReq.innerText) - 1;
      if (parseInt(badgeReq.innerText) == 0) {
        badgeReq.style.display = "none";
      }
      socket.emit("accepted", btn1.id, `<%= currUser.username %>`);
      li.remove();
    });
    btn2.addEventListener("click", () => {
      badgeReq.innerText = parseInt(badgeReq.innerText) - 1;
      if (parseInt(badgeReq.innerText) == 0) {
        badgeReq.style.display = "none";
      }
      socket.emit("declined", btn1.id, `<%= currUser.username %>`);
      li.remove();
    });
    li.appendChild(span);
    li.appendChild(btn1);
    li.appendChild(btn2);
    // li.style.width = "18rem";
    li.classList.add("dropdown-item");
    friendRequests.appendChild(li);
  }

  let requests = "<%= currUser.requests %>".split(",");
  // console.log(requests);
  let cntReq = 0;
  for (let req of requests) {
    if (req != "") {
      cntReq++;
      createReq(req);
    }
  }
  if (cntReq > 0) {
    badgeReq.style.display = "block";
    badgeReq.innerText = cntReq;
  }

  socket.on("friend request", (from) => {
    notifySound.play();
    createReq(from);
    badgeReq.style.display = "block";
    badgeReq.innerText = parseInt(badgeReq.innerText) + 1;
  });

  socket.on("accepted", (friend, rating) => {
    friends.push(friend);
    let div = document.createElement("div");
    div.innerHTML = `
          <div class="h-full w-full p-3 rounded-l-md">
            <button
              class="h-full w-full rounded-l-md text-left pl-4 hover:bg-neutral-800"
            >
              <i class="fa-regular fa-user mr-2"></i>${friend}(${rating})
            </button>
          </div>
          <div class="flex">
            <button
              type="button"
              class="relative text-black bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 h-full w-32 msgBtn"
              id="${friend}"
              onclick = "msgFunc('${friend}')"
            >
              <i class="fa-regular fa-message mr-2"></i>
              Message
              <span
                id="${friend}badge"
                class="position-absolute top-0 start-100 translate-middle badge rounded-full bg-danger hidden"
                >0</span
              >
            </button>
            <button 
              class="w-12 bg-rose-800 rounded-r-md removeFriend" 
              id="${friend}"
              onclick = "removeFriend('${friend}')"
            >
              <i class="fa-solid fa-trash"></i>
            </button>
          </div>
        `;
    div.classList.add(
      "w-11/12",
      "text-white",
      "mx-4",
      "my-2",
      "border-2",
      "border-neutral-800",
      "rounded-md",
      "flex",
      "justify-between"
    );
    div.id = `${friend}friend`;
    allFriends.prepend(div);
  });

  function createMsg(text, pos) {
    let msg = document.createElement("div");
    msg.innerText = text;
    msg.style.position = "relative";
    msg.style.display = "flex";
    msg.style.backgroundColor = "rgb(229 229 229)";
    msg.style.color = "black";
    msg.style.maxWidth = "80%";
    msg.style.textWrap = "pretty";
    msg.style.overflowWrap = "break-word";
    msg.style.borderTopRightRadius = "2rem";
    msg.style.borderTopLeftRadius = "2rem";
    if (pos == "self-end") {
      msg.style.border = "2px solid rgb(34, 34, 126)";
      msg.style.borderBottomLeftRadius = "2rem";
    } else {
      msg.style.borderBottomRightRadius = "2rem";
      msg.style.border = "2px solid rgb(126, 34, 34)";
    }
    msg.style.alignSelf = pos;
    msg.style.margin = "0.5rem";
    msg.style.padding = "0.5rem 1rem";
    msg.style.lineHeight = "1.2rem";
    msgBox.appendChild(msg);
    msgBox.scrollTop = msgBox.scrollHeight;
  }

  send.addEventListener("click", () => {
    if (text.value !== "" && currChat.innerText !== "") {
      createMsg(text.value, "self-end");
      socket.emit(
        "private message",
        currChat.innerText,
        text.value,
        `<%= currUser.username %>`
      );
      text.value = "";
    }
    if (currChat.innerText === "") {
      text.value = "";
      return;
    }
  });
  text.addEventListener("keydown", (event) => {
    if (event.key === "Enter" && currChat.innerText !== "") {
      createMsg(text.value, "self-end");
      socket.emit(
        "private message",
        currChat.innerText,
        text.value,
        `<%= currUser.username %>`
      );
      text.value = "";
    }
    if (event.key === "Enter" && currChat.innerText === "") {
      text.value = "";
      return;
    }
  });

  function msgFunc(msgBtnId) {
    if (msgBtnId === currChat.innerText) return;
    currChat.innerText = msgBtnId;
    let badgeId = document.getElementById(`${msgBtnId}badge`);
    console.log(badgeId);
    badgeId.style.display = "none";
    let read = parseInt(badgeId.innerText);
    badge.innerText = parseInt(badge.innerText) - read;
    if (parseInt(badge.innerText) == 0) badge.style.display = "none";
    badgeId.innerText = 0;
    xhr.open("GET", `user/chats/<%= currUser.username %>/${msgBtnId}`, false);
    xhr.onload = () => {
      let chats = JSON.parse(xhr.responseText);
      // console.log("the chats");
      msgBox.replaceChildren();
      for (let chat of chats) {
        // console.log(chat.message);
        if (chat.from == "<%= currUser.username %>")
          createMsg(chat.message, "self-end");
        else createMsg(chat.message, "self-start");
      }
    };
    xhr.send();
  }

  for (let msgBtn of msgBtns) {
    friends.push(msgBtn.id);
    xhr.open("GET", `user/unread/<%= currUser.username %>/${msgBtn.id}`, false);
    xhr.onload = () => {
      let unReadCnt = xhr.responseText;
      let badge = document.getElementById(`${msgBtn.id}badge`);
      if (unReadCnt > 0) badge.innerText = parseInt(unReadCnt);
      else badge.style.display = "none";
    };
    xhr.send();
    msgBtn.addEventListener("click", () => {
      msgFunc(msgBtn.id);
    });
  }

  function removeFriend(friend) {
    Swal.fire({
      text: `Remove ${friend} from friends`,
      showDenyButton: true,
      confirmButtonText: "Remove",
      denyButtonText: "Cancel",
      icon: "warning",
      color: "#fff",
      background: "rgb(28, 28, 34)",
    }).then((result) => {
      if (result.isConfirmed) {
        let enemy = document.getElementById(`${friend}friend`);
        allFriends.removeChild(enemy);
        let index = friends.indexOf(`${friend}`);
        if (index > -1) {
          friends.splice(index, 1);
        }
        console.log(friends);
        socket.emit("removed", "<%= currUser.username %>", friend);
      }
    });
  }

  socket.on("removed", (friend) => {
    let enemy = document.getElementById(`${friend}friend`);
    allFriends.removeChild(enemy);
    let index = friends.indexOf(`${friend}`);
    if (index > -1) {
      friends.splice(index, 1);
    }
    console.log(friends);
  });

  for (let removeFriendBtn of removeFriendBtns) {
    removeFriendBtn.addEventListener("click", () => {
      removeFriend(removeFriendBtn.id);
    });
  }

  socket.on("msg recieved", (text, from) => {
    notifySound.play();
    if (currChat.innerText != from) {
      let badgeId = document.getElementById(`${from}badge`);
      badgeId.style.display = "block";
      badgeId.innerText = parseInt(badgeId.innerText) + 1;
    } else {
      xhr.open("GET", `user/read/<%= currUser.username %>/${from}`, false);
      xhr.onload = () => {};
      xhr.send();
      createMsg(text, "self-start");
      badge.innerText = parseInt(badge.innerText) - 1;
      if (parseInt(badge.innerText) == 0) badge.style.display = "none";
    }
  });
</script>
<script>
  let user = "guest";
  <% if(currUser) { %>
    user = `<%= currUser.username %>`;
    socket.emit("userConnect", user);
    xhr.open("GET", `user/unread/<%= currUser.username %>`, true);
    xhr.onload = () => {
      let unReadCnt = xhr.responseText;
      badge.style.display = "block";
      if (parseInt(unReadCnt) > 0) badge.innerText = parseInt(unReadCnt);
      else badge.style.display = "none";
    };
    xhr.send();
  <% } %>
</script>
