<nav class="navbar navbar-dark bg-dark sticky-top border-bottom">
  <div class="container-fluid">
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="offcanvas"
      data-bs-target="#offcanvasDarkNavbar"
      aria-controls="offcanvasDarkNavbar"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="flex mr-4 h-10">
      <div class="text-white text-3xl mr-4">Shatranj</div>
      <form action="/user/friends">
        <div
          class="h-full text-center text-white flex items-center"
          id="notifications"
        >
          <button class="relative">
            <i class="fa-solid fa-bell text-xl"></i>
            <span
              class="position-absolute top-0 start-100 translate-middle badge rounded-full bg-danger hidden"
              id="badge"
            >
              0
            </span>
          </button>
        </div>
      </form>
    </div>
    <div
      class="offcanvas offcanvas-start text-bg-dark w-25"
      tabindex="-1"
      id="offcanvasDarkNavbar"
      aria-labelledby="offcanvasDarkNavbarLabel"
    >
      <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasDarkNavbarLabel">
          Shatranj.com
        </h5>
        <button
          type="button"
          class="btn-close btn-close-white"
          data-bs-dismiss="offcanvas"
          aria-label="Close"
        ></button>
      </div>
      <div class="offcanvas-body d-flex flex-column justify-content-between">
        <div>
          <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/">Play</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/learn">Learn</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="link" href="/" onclick="handleLink()"
                >Your Games</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/user/friends">Social</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/leaderboard">Leaderboard</a>
            </li>
          </ul>
        </div>
        <div>
          <ul>
            <li class="nav-item dropdown dropup position-relative">
              <a
                class="nav-link dropdown-toggle"
                href="#"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                <% if(!currUser) { %> Guest <% } %> <% if(currUser) { %> <%=
                currUser.username %> <% } %>
              </a>
              <ul class="dropdown-menu dropdown-menu-dark">
                <% if(!currUser) { %>
                <li><a class="dropdown-item" href="/user/login">Log In</a></li>
                <li>
                  <a class="dropdown-item" href="/user/signup">Sign Up</a>
                </li>
                <% } %> <% if(currUser) { %>
                <li>
                  <a class="dropdown-item" href="/user/logout">Log Out</a>
                </li>
                <% } %>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</nav>
<script>
  let badge = document.getElementById("badge");
  let notifications = document.getElementById("notifications");

  function handleLink() {
    let link = "/user/login";
    if (user && user != "guest") {
      link = `/user/${user}`;
    }
    document.getElementById("link").setAttribute("href", link);
  }

  socket.on("msg recieved", (text, from) => {
    badge.style.display = "block";
    badge.innerText = parseInt(badge.innerText) + 1;
  });

  socket.on("room id", (mode, roomId, color) => {
    window.location.replace(
      `/match/online?mode=${mode}&roomId=${roomId}&color=${color}`
    );
  });

  socket.on("challenge", (opponent, gamemode, color) => {
    Swal.fire({
      title: `${opponent} sent you a challenge`,
      showDenyButton: true,
      confirmButtonText: "Accept",
      denyButtonText: "Decline",
      icon: "question",
      color: "#fff",
      background: "rgb(28, 28, 34)",
    }).then((result) => {
      if (result.isConfirmed) {
        socket.emit("create private room", gamemode, user, opponent, color);
      } else {
        socket.emit("challenge declined", opponent, user);
      }
    });
  });
</script>
